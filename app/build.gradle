apply plugin: 'com.android.application'
apply plugin: 'com.taobao.atlas'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

apply from: 'maven.gradle'

version = project.versionName
group = project.applicationId

android {
    compileSdkVersion project.targetSdkVersion
    buildToolsVersion project.buildToolsVersion

    defaultConfig {
        applicationId project.applicationId
        minSdkVersion project.minSdkVersion
        targetSdkVersion project.targetSdkVersion
        versionCode project.versionCode
        versionName project.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        ndk {
            abiFilters "x86", "armeabi"
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

atlas {

    // atlas 插件的开关, 打开后会在编译期做很多事情
    atlasEnabled true

    tBuildConfig {
        // 指定第一个需要启动的bundle
        autoStartBundles = [project.atlasConfig['autoStartBundles']]
        // 指定远程bundle
        outOfApkBundles = [project.atlasConfig['outOfApkBundles']]
        // 自定义初始化入口. 回调时机是在atlas对系统进行hack之后, atlas框架开始初始化之前
        preLaunch = ''
        classInject false
    }

    manifestOptions {
        addAtlasProxyComponents true
    }


    patchConfigs {
        debug {
            createTPatch true
        }
    }

    buildTypes {
        debug {
            if (apVersion) {
                baseApDependency "${project.applicationId}:AP-debug:${apVersion}@ap"
                patchConfig patchConfigs.debug
            }
        }
    }

}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile project(':lib.base')
    compile project(':lib.common')
    compile project(':lib.network')
    bundleCompile project(':plugin.main')
    bundleCompile project(':plugin.user')
    bundleCompile project(':remote.scanner')
}
